# Nom du workflow qui apparaîtra dans l'onglet "Actions" de GitHub
name: CI/CD Pipeline

# Déclencheur : ce workflow se lance à chaque `push` sur la branche `main`
on:
  push:
    branches: [ "main" ]

# Les tâches à exécuter
jobs:
  # On définit une seule tâche (job) qu'on appelle "build-and-push"
  build-and-push:
    # Le type de machine sur lequel notre robot va tourner
    runs-on: ubuntu-latest

    # Les étapes séquentielles de la tâche
    steps:
      # Étape 1 : Télécharger le code
      # Utilise une action pré-faite par GitHub pour récupérer notre code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2 : Se connecter à Docker Hub
      # Utilise une action pré-faite par Docker pour se connecter de manière sécurisée
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Étape 3 : Construire l'image Docker et la pousser sur Docker Hub
      # Utilise une autre action de Docker qui s'occupe de tout
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          # Crée l'étiquette (tag) de l'image. Ex: "mon-user/portfolio-nodejs:latest"
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/portfolio-nodejs:latest